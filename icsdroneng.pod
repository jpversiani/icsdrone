=head1 NAME

icsdroneng -  Interface between an xboard chess engine and FICS

=head1 SYNOPSIS

icsdrone [options]

=head1 DESCRIPTION

icsdroneng is a fork of icsdrone. 

    icsdroneng acts as an interface between FICS (the Free Internet Chess Server) and
    a chess engine supporting the XBoard/WinBoard protocol. Unlike XBoard/WinBoard
    it does not use a graphical interface so it is suitable for use on
    embedded systems. 

    UCI engines may be used through the polyglot adapter. 

icsdroneng has the following new features.

    - Feedback on commands.
    - Builtin polyglot book support. 
    - Feedback on the current evaluation and principal variation (through "whisper" or "kibitz"). 
    - "Daemon mode" (run in background).
    - PGN logging. 
    - Auto reconnection in case of network problems.
    - Support for resigning on behalf of the engine. 
    - Support for handling of draw offers.
    - Support for autojoining tourneys. 
    - Builtin support for using timeseal.
    - Optional "shortlog". E.g. for consulting via a webbrowser.
    - Interactive console with readline support and colors.

=head1 OPTIONS

All options take an argument. In the case of boolean options this is on/off.

=over 4

=item B<-icsHost> (default: "freechess.org")

Hostname of the FICS server.

=item B<-icsPort> (default: 23)

Port of the FICS server.

=item B<-timeseal>

Path to timeseal binary.

=item B<-handle> (default: "guest") 

Login handle. 

=item B<-password> 

FICS password

=item B<-loginScript> 

Script with login data and commands.

=item B<-owner>
    
Specifies a FICS handle of a user which can send tell commands to icsdroneng.

=item B<-autoReconnect> (default: "on")

Autoreconnect to FICS on network failures.

=item B<-console> (default: "on")
    
Start up with console enabled. The console looks somewhat nicer when
readline support is compiled in.

=item B<-daemonize> (default: "off")

Go into background. This implies console off.

=item B<-feedback> (default: "off")

Send info about the eval and principal variation.

=item B<-feedbackOnlyFinal> (default: "on")

Give feedback info only before move.

=item B<-feedbackCommand> (default "whisper")

The command to use to send feedback to observers. Use "kibitz" if you want your
opponent to also see the feedback.

=item B<-ownerQuiet> (default: "off") 

Send no tells to the owner about starting and finishing games.

=item B<-engineQuiet> (default: "off")

Do no pass on most engine commands to FICS. Some engines are just
too noisy.

=item B<-program> (default: "gnuchess")
    
Command to start the engine. If the engine is an UCI engine then this
should be an appropriate polyglot command. 

=item B<-nice>

Run the engine at lower priority.

=item B<-searchDepth> (default: 0)

Specifies the maximum search depth for the engine. 0 means unlimited.

=item B<-secPerMove> (default: 0)

Specifies the maximum time to search for the engine. 0 means unlimited.

=item B<-easyMode> (default: "on")
    
Specifies if the engine thinks on the opponents time or not. 

=item B<-resign> (default: "on")

Specifies if icsdroneng will resign on behalf of the engine. 

=item B<-acceptDraw> (default: "on")

Specifies if icsdroneng will accept draw offers on behalf of the engine. 

=item B<-scoreForWhite>  (default: "off")

Specifies if the engine reports the score of white (like Crafty). If
the engine is Crafty then icsdroneng will turn this on automatically. 
This is important to handle resigns and draw offers correctly. 

=item B<-book> 
    
Path to an opening book in polyglot format. 

=item B<-logFile> (default: "<handle>.log")

Path to the logfile. If the name ends in .gz and zlib support is compiled
in then the logfile will be compressed.

=item B<-logAppend> (default: "off")

Specifies if we should append to the logfile.

=item B<-logging> (default: "on")

Specifies if logging is enabled. Note that logfiles are very large so
on an embedded system you probably want to disable this. 

=item B<-pgnFile> (default: "<handle>.pgn")

Log games to this file.

=item B<-pgnLogging> (default: "on")

Specifies if logging of games is enabled. 

=item B<-shortLogFile> (default: "<handle>.txt")

Log start/end of games as well as received tells to this file. 

=item B<-shortLogging> (default: "on")

Specifies if short logging is enabled.

=item B<-sendLogin>

Commands to send at login. Multiple commands can be separated by \n.

=item B<-sendGameStart> (default: "say this is <enginename>")

Commands to send at start of game. Multiple commands can be separated by \n.

=item B<-sendGameEnd> 

Commands to send at end of game. Multiple commands can be separated by \n.

=item B<-sendTimeOut> (default: "resume")

Commands to send when idle. Multiple commands can be separated by \n.
 
=item B<-limitRematches>  (default: 0)

After this number of rematches wait 60 seconds before accepting. 0
means disable.

=item B<-hardLimit> (default: 0)

After this number of rematches automatically decline the next match
offer from the same opponent. 0 means disable.

=item B<-issueRematch> (default: "off")

Send "rematch" at end of the game.

=item B<-acceptOnly> 

Accept only challenges from this user. 

=item B<-noplay>

Comma separated list of players to auto decline offers from (case 
sensitive). Note this is not the same as the FICS "noplay" list. 

=item B<-autoJoin> (default: "on")

Autojoin tourneys.

=item B<-colorTell>

=item B<-colorAlert>

=item B<-colorDefault>

Some colors for use in the console when icsdroneng is compiled with readline support. 

=back

=head1 CONSOLE AND TELL COMMANDS, SCRIPTS

While icsdroneng is running you can send commands to it via the console
and if you are the owner also via "tell". In addition commands 
can be put in scripts which can be loaded or specified as a 
login script (with the command line option "-loginScript").

If you use a login script the first two lines should be the username
and password.

The following commands are interpreted by icsdroneng.

    help       Give some rudimentary help 
    set        Set an option (see below)
    softquit   Quit at the end of this game
    hardquit   Quit now
    restart    Quit and reconnect if autoReconnect is enabled. Otherwise quit.
    options    List the settable options 
    coptions   List all options including those not settable at runtime.
    daemonize  Go into background
    load       Execute a script (for security reasons the name should end with .icsdrone)

Other commands (e.g. "draw", "seek", "match") will be forwarded to FICS.
Unless they are prefixed by * in which case they will be sent to the engine. 

With the "set" command you can change some command line options at runtime.
This applies to the following options. 

    easymode
    searchdepth
    secpermove
    sendgameend
    sendgamestart 
    sendtimeout
    sendlogin
    limitrematches
    issuerematch
    hardlimit
    acceptonly 
    feedback 
    feedbackcommand
    ownerquiet
    pgnlogging
    shortlogging
    noplay
    autojoin
    autoreconnect
    resign
    acceptdraw
    scoreforwhite
    colortell
    coloralert
    colordefault

In contrast to command line options, these options are not case sensitive. 

=head1 ADITIONAL REMARKS

It is important to always issue manual seeks. E.g. seek 1 0 m.  In
that way icsdroneng can perform checks before accepting an opponent
(like verifying the noplay option). This is especially important when
playing as a guest since in that case FICS does not know you are a
computer and will auto match seeks (annoying the hell out of people
who do not expect to get a computer opponent).  icsdroneng defends
against this but this will only work if you issue manual seeks. 

=head1 EXAMPLES

An example command line 

    icsdrone -owner RoboOwner -program "polyglot engine.ini"  -loginScript engine.script -timeseal ./timeseal.Linux -book performance.bin -daemonize on

Here is an example login script

    RoboUser
    xxxx
    set sendgameend say thanks\nseek 2 12 m
    seek 2 12 m

A command line to make crafty play blitz without further intervention

   icsdrone -handle RoboUser -password xxx -program crafty -sendLogin "seek 2 12 m" -sendGameEnd "seek 2 12 m"

an equivalent version

   icsdrone -handle RoboUser -password xxx -program crafty -sendLogin "seek 2 12 m\n set sendgameend seek 2 12 m"

=head1 EXIT STATUS

icsdroneng returns 1 ("restart") if the autoReconnect option is off
and a network error occurs after a succesful login or a restart
command is executed.  In all other cases a value > 1 is returned.

=head1 AUTHORS

    Henrik Gram <henrik.gram@gmail.com>
    Michel Van den Bergh <michel.vandenbergh@uhasselt.be>    

=head1 SEE ALSO

polyglot(6)
